// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: src/action_intention/envelope/v1/digest.proto

package sm_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a single item in the encrypted message digest.
type EncryptedDigestItemPb struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The URN of the conversation (e.g., "urn:sm:user:..." or "urn:sm:group:...").
	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// The encrypted blob containing digest information like sender alias,
	// message snippet, timestamp, etc. The client must decrypt this.
	EncryptedSnippet      []byte `protobuf:"bytes,2,opt,name=encrypted_snippet,json=encryptedSnippet,proto3" json:"encrypted_snippet,omitempty"`
	EncryptedSymmetricKey []byte `protobuf:"bytes,3,opt,name=encrypted_symmetric_key,json=encryptedSymmetricKey,proto3" json:"encrypted_symmetric_key,omitempty"`
	// a switch to check github workflows - comment or uncomment to activate workflow
	ChangeField   []byte `protobuf:"bytes,4,opt,name=change_field,json=changeField,proto3" json:"change_field,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncryptedDigestItemPb) Reset() {
	*x = EncryptedDigestItemPb{}
	mi := &file_src_action_intention_envelope_v1_digest_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncryptedDigestItemPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptedDigestItemPb) ProtoMessage() {}

func (x *EncryptedDigestItemPb) ProtoReflect() protoreflect.Message {
	mi := &file_src_action_intention_envelope_v1_digest_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptedDigestItemPb.ProtoReflect.Descriptor instead.
func (*EncryptedDigestItemPb) Descriptor() ([]byte, []int) {
	return file_src_action_intention_envelope_v1_digest_proto_rawDescGZIP(), []int{0}
}

func (x *EncryptedDigestItemPb) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *EncryptedDigestItemPb) GetEncryptedSnippet() []byte {
	if x != nil {
		return x.EncryptedSnippet
	}
	return nil
}

func (x *EncryptedDigestItemPb) GetEncryptedSymmetricKey() []byte {
	if x != nil {
		return x.EncryptedSymmetricKey
	}
	return nil
}

func (x *EncryptedDigestItemPb) GetChangeField() []byte {
	if x != nil {
		return x.ChangeField
	}
	return nil
}

// A wrapper message for a list of encrypted digest items.
// This is the structure the API endpoint `/api/messages/digest` would return.
type EncryptedDigestPb struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Items         []*EncryptedDigestItemPb `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EncryptedDigestPb) Reset() {
	*x = EncryptedDigestPb{}
	mi := &file_src_action_intention_envelope_v1_digest_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EncryptedDigestPb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptedDigestPb) ProtoMessage() {}

func (x *EncryptedDigestPb) ProtoReflect() protoreflect.Message {
	mi := &file_src_action_intention_envelope_v1_digest_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptedDigestPb.ProtoReflect.Descriptor instead.
func (*EncryptedDigestPb) Descriptor() ([]byte, []int) {
	return file_src_action_intention_envelope_v1_digest_proto_rawDescGZIP(), []int{1}
}

func (x *EncryptedDigestPb) GetItems() []*EncryptedDigestItemPb {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_src_action_intention_envelope_v1_digest_proto protoreflect.FileDescriptor

const file_src_action_intention_envelope_v1_digest_proto_rawDesc = "" +
	"\n" +
	"-src/action_intention/envelope/v1/digest.proto\x12\x1caction_intention.envelope.v1\"\xc8\x01\n" +
	"\x15EncryptedDigestItemPb\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\tR\x0econversationId\x12+\n" +
	"\x11encrypted_snippet\x18\x02 \x01(\fR\x10encryptedSnippet\x126\n" +
	"\x17encrypted_symmetric_key\x18\x03 \x01(\fR\x15encryptedSymmetricKey\x12!\n" +
	"\fchange_field\x18\x04 \x01(\fR\vchangeField\"^\n" +
	"\x11EncryptedDigestPb\x12I\n" +
	"\x05items\x18\x01 \x03(\v23.action_intention.envelope.v1.EncryptedDigestItemPbR\x05itemsBIZGgithub.com/illmade-knight/go-action-intention-protos/gen/go/sm/v1;sm_v1b\x06proto3"

var (
	file_src_action_intention_envelope_v1_digest_proto_rawDescOnce sync.Once
	file_src_action_intention_envelope_v1_digest_proto_rawDescData []byte
)

func file_src_action_intention_envelope_v1_digest_proto_rawDescGZIP() []byte {
	file_src_action_intention_envelope_v1_digest_proto_rawDescOnce.Do(func() {
		file_src_action_intention_envelope_v1_digest_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_src_action_intention_envelope_v1_digest_proto_rawDesc), len(file_src_action_intention_envelope_v1_digest_proto_rawDesc)))
	})
	return file_src_action_intention_envelope_v1_digest_proto_rawDescData
}

var file_src_action_intention_envelope_v1_digest_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_src_action_intention_envelope_v1_digest_proto_goTypes = []any{
	(*EncryptedDigestItemPb)(nil), // 0: action_intention.envelope.v1.EncryptedDigestItemPb
	(*EncryptedDigestPb)(nil),     // 1: action_intention.envelope.v1.EncryptedDigestPb
}
var file_src_action_intention_envelope_v1_digest_proto_depIdxs = []int32{
	0, // 0: action_intention.envelope.v1.EncryptedDigestPb.items:type_name -> action_intention.envelope.v1.EncryptedDigestItemPb
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_src_action_intention_envelope_v1_digest_proto_init() }
func file_src_action_intention_envelope_v1_digest_proto_init() {
	if File_src_action_intention_envelope_v1_digest_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_src_action_intention_envelope_v1_digest_proto_rawDesc), len(file_src_action_intention_envelope_v1_digest_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_src_action_intention_envelope_v1_digest_proto_goTypes,
		DependencyIndexes: file_src_action_intention_envelope_v1_digest_proto_depIdxs,
		MessageInfos:      file_src_action_intention_envelope_v1_digest_proto_msgTypes,
	}.Build()
	File_src_action_intention_envelope_v1_digest_proto = out.File
	file_src_action_intention_envelope_v1_digest_proto_goTypes = nil
	file_src_action_intention_envelope_v1_digest_proto_depIdxs = nil
}
